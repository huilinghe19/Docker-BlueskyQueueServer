# What's in this repo?

* A library of ophyd devices which interface with EPICS
* Scripts to assign names to devices for specific experiments (sissy2) and beamlines (emil17,emil48)

# What's it based on?

https://nsls-ii.github.io/ophyd/device-overview.html

https://blueskyproject.io/bluesky/ 

# How should I use it?

Use it as a basis for your own beamline. fork this repo and pull the submodule. Use the start.py as a reference for your own start.py which should be copied to 

`~/.ipython/profile_defaults/startup/start.py`

It will set up the bluesky enviroment, create a run engine, and subscribe file export to it

# Installation Instructions

Create a directory called bluesky somewhere on the machine you want to install on. 

`mkdir ~/bluesky`
`cd ~/bluesky`

check that you are using at least python version 3.7

`python3 --version`

Now create a python venv

```
python -m pip install virtualenv
python3 -m venv ~/bluesky_venv
source ~/bluesky_venv/bin/activate
```

Now clone this repo and submodules in ~/.ipython/:

'''
git clone --recursive https://gitlab.helmholtz-berlin.de/sissy/experiment-control/profile_default.git`
cd emilOphyd/install
python3 -m pip install -r requirements.txt
```

Then clone the suitcase package, and install it:

```
git clone https://github.com/hz-b/suitcase-specfile.git
cd suitcase-specfile
git checkout multiple_motors
python3 -m pip install .
```

Open ipython and check that you don't get any erros

`ipython --matplotlib=qt5`

## Configuring Mongo DB

This step assumes you have permission to write to the sissy data store.

Open ipython and  type:

```
from databroker import catalog_search_path
catalog_search_path()
```

The respsonse will be somthing like:

`/home/specadm/bluesky/bluesky_venv/share/intake`

copy the file under mongodb to this location. If there are more than one, choose the one in the venv

```
mkdir /home/specadm/bluesky/bluesky_venv/share/intake
cp ~/bluesky/emilOphyd/install/mongodb/siss2y_rw.yml /home/specadm/bluesky/bluesky_venv/share/intake/siss2y_rw.yml
```

## Configuring User profiles

Create profiles for different users. Here we will create a root user with access to all the devices defined in blc12.py.
An example of a reduced access user can be found in `start_soft.py`

```
ipython profile create emil_root
cp ~/bluesky/emilOphyd/install/start_root.py ~/.ipython/profile_emil_root/startup/start.py
```

## Setting up file Export

Files are exported using the suitcase-specfile serializer. First we need to modify where these files will be saved.
Go to `~/.ipython/profile_emil_root/startup/start.py` and modify the following line as required:

`spec_factory.directory = "/home/specadm/bluesky/data/"`

## Creating a start script

To start different profiles we need to use a bash script. An example can be found at `start_bluesky_sissy`

Copy this to `/usr/bin/` and use chmod to make it executable

```
sudo cp ~/bluesky/emilOphyd/install/start_bluesky_sissy /usr/bin/start_bluesky_sissy
sudo chmod a+x /usr/bin/start_bluesky_sissy
```

You can now start a bluesky session from anywhere on the machine

`start_bluesky_sissy`


